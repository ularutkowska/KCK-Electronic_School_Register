<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AbortingMessage" xml:space="preserve">
    <value>Aborting message</value>
  </data>
  <data name="AddedClassInfo" xml:space="preserve">
    <value>Class has been added</value>
  </data>
  <data name="App_ExitMessage" xml:space="preserve">
    <value>Exiting program...</value>
  </data>
  <data name="App_Title" xml:space="preserve">
    <value>Electronic School Diary</value>
  </data>
  <data name="ChooseRole" xml:space="preserve">
    <value>Choose a role</value>
  </data>
  <data name="Class" xml:space="preserve">
    <value>Class </value>
  </data>
  <data name="ComposeMessage" xml:space="preserve">
    <value>Compose Message</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="EnterContent" xml:space="preserve">
    <value>Enter content</value>
  </data>
  <data name="EnterEmailAddress" xml:space="preserve">
    <value>Enter email address:</value>
  </data>
  <data name="EnterPassword" xml:space="preserve">
    <value>Enter Password:</value>
  </data>
  <data name="EnterStudentID" xml:space="preserve">
    <value>Enter student ID:</value>
  </data>
  <data name="EnterSubject" xml:space="preserve">
    <value>Enter subject</value>
  </data>
  <data name="EnterValidOption" xml:space="preserve">
    <value>Enter a valid option (1-3):</value>
  </data>
  <data name="Error_InvalidDateFormat" xml:space="preserve">
    <value>Invalid date format. Please enter a valid date (yyyy-mm-dd):</value>
  </data>
  <data name="Error_InvalidEmail" xml:space="preserve">
    <value>Invalid email address. Please enter a valid email:</value>
  </data>
  <data name="Error_InvalidPhoneNumber" xml:space="preserve">
    <value>Invalid phone number. The phone number must contain at least 9 digits:</value>
  </data>
  <data name="Error_NotLoggedInAsParent" xml:space="preserve">
    <value>You are not logged in as a parent</value>
  </data>
  <data name="Error_NotLoggedInAsTeacher" xml:space="preserve">
    <value>You are not logged in as a teacher</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="Grade" xml:space="preserve">
    <value>Grade</value>
  </data>
  <data name="Header_GradeManagement" xml:space="preserve">
    <value>Grade Management</value>
  </data>
  <data name="in" xml:space="preserve">
    <value> in </value>
  </data>
  <data name="Inbox" xml:space="preserve">
    <value>Inbox</value>
  </data>
  <data name="InvalidIdOrPassword" xml:space="preserve">
    <value>Invalid ID or password</value>
  </data>
  <data name="InvalidInputInfo" xml:space="preserve">
    <value>Invalid input. Please enter a single letter (A-Z):</value>
  </data>
  <data name="InvalidLoginCredentials" xml:space="preserve">
    <value>Invalid login credentials</value>
  </data>
  <data name="InvalidLoginOrPassword" xml:space="preserve">
    <value>Invalid login or password. Returning to role selection...</value>
  </data>
  <data name="InvalidRecipientSelected" xml:space="preserve">
    <value>Invalid recipient selected</value>
  </data>
  <data name="Label_Class" xml:space="preserve">
    <value>Class {0}</value>
  </data>
  <data name="LoggedInAs" xml:space="preserve">
    <value>Logged in as </value>
  </data>
  <data name="LoggedInAsStudent" xml:space="preserve">
    <value>Logged in as student</value>
  </data>
  <data name="Menu_AddClass" xml:space="preserve">
    <value>Add Class</value>
  </data>
  <data name="Menu_AddGrade" xml:space="preserve">
    <value>Add Grade</value>
  </data>
  <data name="Menu_AddParent" xml:space="preserve">
    <value>Add Parent</value>
  </data>
  <data name="Menu_AddStudent" xml:space="preserve">
    <value>Add Student</value>
  </data>
  <data name="Menu_AddSubject" xml:space="preserve">
    <value>Add Subject</value>
  </data>
  <data name="Menu_AddTeacher" xml:space="preserve">
    <value>Add Teacher</value>
  </data>
  <data name="Menu_Class" xml:space="preserve">
    <value>{0}. Class {1}</value>
  </data>
  <data name="Menu_ComposeMessage" xml:space="preserve">
    <value>Compose Message</value>
  </data>
  <data name="Menu_Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="Menu_Inbox" xml:space="preserve">
    <value>Inbox</value>
  </data>
  <data name="Menu_ManageGrades" xml:space="preserve">
    <value>Manage Grades</value>
  </data>
  <data name="Menu_SentMessages" xml:space="preserve">
    <value>Sent Messages</value>
  </data>
  <data name="Menu_ViewByClass" xml:space="preserve">
    <value>View by Class</value>
  </data>
  <data name="Menu_ViewClasses" xml:space="preserve">
    <value>View Classes</value>
  </data>
  <data name="Menu_ViewPersonal" xml:space="preserve">
    <value>View Personal (Parent)</value>
  </data>
  <data name="MessageContent" xml:space="preserve">
    <value>Message content</value>
  </data>
  <data name="MessageSent" xml:space="preserve">
    <value>Message sent</value>
  </data>
  <data name="Message_AddingGradeFor" xml:space="preserve">
    <value>Adding a grade for </value>
  </data>
  <data name="Message_EnterGradeValue" xml:space="preserve">
    <value>Enter the grade value (1-6):</value>
  </data>
  <data name="Message_EnterTeacherEmail" xml:space="preserve">
    <value>Enter the teacher's email:</value>
  </data>
  <data name="Message_EnterTeacherFirstName" xml:space="preserve">
    <value>Enter teacher's first name:</value>
  </data>
  <data name="Message_EnterTeacherLastName" xml:space="preserve">
    <value>Enter teacher's last name:</value>
  </data>
  <data name="Message_EnterTeacherPassword" xml:space="preserve">
    <value>Enter a new password for the teacher:</value>
  </data>
  <data name="Message_EnterTeacherPhone" xml:space="preserve">
    <value>Enter the teacher's phone number:</value>
  </data>
  <data name="Message_ExitingGradeManagement" xml:space="preserve">
    <value>Exiting grade management</value>
  </data>
  <data name="Message_GradeAddedSuccessfully" xml:space="preserve">
    <value>Grade has been added successfully</value>
  </data>
  <data name="Message_GradesFor" xml:space="preserve">
    <value>Grades for </value>
  </data>
  <data name="Message_InvalidGrade" xml:space="preserve">
    <value>Invalid grade. Please enter a value between 1 and 6:</value>
  </data>
  <data name="Message_LoginSuccess" xml:space="preserve">
    <value>Logged in successfully</value>
  </data>
  <data name="Message_NoAssignedSubjects" xml:space="preserve">
    <value>You have no assigned subjects</value>
  </data>
  <data name="Message_NoClassesAvailable" xml:space="preserve">
    <value>No classes available.</value>
  </data>
  <data name="Message_NoGradesFoundFor" xml:space="preserve">
    <value>No grades found for </value>
  </data>
  <data name="Message_NoParentsFound" xml:space="preserve">
    <value>No parents found with the given name</value>
  </data>
  <data name="Message_NoStudentLinkedToParent" xml:space="preserve">
    <value>No student linked to this parent</value>
  </data>
  <data name="Message_NoStudentsInClass" xml:space="preserve">
    <value>No students in this class</value>
  </data>
  <data name="Message_ParentAdded" xml:space="preserve">
    <value>Parent has been added.Parent has been added</value>
  </data>
  <data name="Message_ParentInfo" xml:space="preserve">
    <value>{0}. {1} {2}, Phone: {3}</value>
  </data>
  <data name="Message_Read" xml:space="preserve">
    <value>[Read]</value>
  </data>
  <data name="Message_ReturnToRoleSelection" xml:space="preserve">
    <value>You chose to return to the role selection</value>
  </data>
  <data name="Message_SelectClassToView" xml:space="preserve">
    <value>Select a class to view its students:</value>
  </data>
  <data name="Message_SelectParent" xml:space="preserve">
    <value>Select the parent using arrow keys</value>
  </data>
  <data name="Message_SelectSubject" xml:space="preserve">
    <value>Select a subject:</value>
  </data>
  <data name="Message_StudentAdded" xml:space="preserve">
    <value>Student has been added</value>
  </data>
  <data name="Message_SubjectAdded" xml:space="preserve">
    <value>Subject has been added</value>
  </data>
  <data name="Message_TeacherAdded" xml:space="preserve">
    <value>Teacher has been added</value>
  </data>
  <data name="Message_Unread" xml:space="preserve">
    <value>[Unread]</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NoClassesInfo" xml:space="preserve">
    <value>No classes available</value>
  </data>
  <data name="NoMessages" xml:space="preserve">
    <value>No messages</value>
  </data>
  <data name="NoRecipientsFound" xml:space="preserve">
    <value>No recipients found</value>
  </data>
  <data name="NoSentMessages" xml:space="preserve">
    <value>No sent messages</value>
  </data>
  <data name="NoTeachersInfo" xml:space="preserve">
    <value>No teachers added</value>
  </data>
  <data name="Parent" xml:space="preserve">
    <value>Parent</value>
  </data>
  <data name="PressAnyKeyToGoBack" xml:space="preserve">
    <value>Press any key to go back to sent messages</value>
  </data>
  <data name="Prompt_ClassLetter" xml:space="preserve">
    <value>Enter the class letter (A-Z): </value>
  </data>
  <data name="Prompt_EnterAtLeast3Letters" xml:space="preserve">
    <value>Please enter at least 3 letters of the last name:</value>
  </data>
  <data name="Prompt_EnterParentLastName" xml:space="preserve">
    <value>Enter at least 3 letters of parent's last name:</value>
  </data>
  <data name="Prompt_EnterSubjectName" xml:space="preserve">
    <value>Enter subject's name:</value>
  </data>
  <data name="Prompt_ParentEmail" xml:space="preserve">
    <value>Enter parent's email address:</value>
  </data>
  <data name="Prompt_ParentFirstName" xml:space="preserve">
    <value>Enter parent's first name:</value>
  </data>
  <data name="Prompt_ParentLastName" xml:space="preserve">
    <value>Enter parent's last name:</value>
  </data>
  <data name="Prompt_ParentPassword" xml:space="preserve">
    <value>Enter parent's password:</value>
  </data>
  <data name="Prompt_ParentPhoneNumber" xml:space="preserve">
    <value>Enter parent's phone number:</value>
  </data>
  <data name="Prompt_SelectClass" xml:space="preserve">
    <value>Select a class for the student using arrow keys:</value>
  </data>
  <data name="Prompt_SelectClass1" xml:space="preserve">
    <value>Select a class:</value>
  </data>
  <data name="Prompt_SelectClassGrade" xml:space="preserve">
    <value>Select class grade (1-8):</value>
  </data>
  <data name="Prompt_SelectStudentInClass" xml:space="preserve">
    <value>Class {0}: Select a student:</value>
  </data>
  <data name="Prompt_SelectTeachers" xml:space="preserve">
    <value>Select teachers</value>
  </data>
  <data name="Prompt_StudentBirthDate" xml:space="preserve">
    <value>Enter student's BirthDate (yyyy-mm-dd):</value>
  </data>
  <data name="Prompt_StudentFirstName" xml:space="preserve">
    <value>Enter student's first name:</value>
  </data>
  <data name="Prompt_StudentLastName" xml:space="preserve">
    <value>Enter student's last name:</value>
  </data>
  <data name="Prompt_StudentPassword" xml:space="preserve">
    <value>Enter student's password:</value>
  </data>
  <data name="Prompt_SupervisingTeacher" xml:space="preserve">
    <value>Select a supervising teacher</value>
  </data>
  <data name="RetryPrompt" xml:space="preserve">
    <value>Do you want to retry?</value>
  </data>
  <data name="SelectedGrade" xml:space="preserve">
    <value>Selected grade: </value>
  </data>
  <data name="SelectMessageDetails" xml:space="preserve">
    <value>Select a message to view details (Enter number):</value>
  </data>
  <data name="SelectRecipient" xml:space="preserve">
    <value>Select a recipient (Enter number):</value>
  </data>
  <data name="SelectRecipientType" xml:space="preserve">
    <value>Select the recipient type:</value>
  </data>
  <data name="Select_Message_To_Read" xml:space="preserve">
    <value>Select a message to read (Enter number):</value>
  </data>
  <data name="Sent" xml:space="preserve">
    <value>Sent</value>
  </data>
  <data name="SentMessages" xml:space="preserve">
    <value>Sent Messages</value>
  </data>
  <data name="Student" xml:space="preserve">
    <value>Student</value>
  </data>
  <data name="Students_Info" xml:space="preserve">
    <value> - students:</value>
  </data>
  <data name="Subject" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="Subject1" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="Teacher" xml:space="preserve">
    <value>Teacher</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>